#include <SPI.h>
#include <MFRC522.h>
#include <WiFi.h>
#include <HTTPClient.h>

const char* ssid = "Hasheer Manzil_EXT";  
const char* password = "haneesh@123";  

#define RST_PIN  4
#define SS_PIN   21

MFRC522 mfrc522(SS_PIN, RST_PIN);

const String registerEndpoint = "http://192.168.1.101:5000/register_nfc";  
const String scanEndpoint = "http://192.168.1.101:5000/scan_nfc";  

bool isRegistrationMode = false;

void setup() {
  Serial.begin(115200);
  SPI.begin();
  mfrc522.PCD_Init();
  
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi...");
  
  int attempts = 0;
  while (WiFi.status() != WL_CONNECTED && attempts < 20) {  
    delay(1000);
    Serial.print(".");
    attempts++;
  }

  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("\nFailed to connect to WiFi. Restarting...");
    ESP.restart();
  }

  Serial.println("\nConnected to WiFi!");
  Serial.println("\nSystem ready. Type 'register' to enter registration mode, or 'scan' to enter scanning mode.");
}

void loop() {
  if (Serial.available() > 0) {
    String input = Serial.readString();
    input.trim();

    if (input == "register") {
      isRegistrationMode = true;
      Serial.println("\nSwitching to Registration Mode. Scan a card to register.");
    } else if (input == "scan") {
      isRegistrationMode = false;
      Serial.println("\nSwitching to Scan Mode. Scan a card to log attendance.");
    }
  }

  if (mfrc522.PICC_IsNewCardPresent() && mfrc522.PICC_ReadCardSerial()) {
    String uid = getUID();
    Serial.println("NFC UID: " + uid);

    if (isRegistrationMode) {
      Serial.print("Enter User Name: ");
      
      while (!Serial.available());  
      String name = Serial.readStringUntil('\n');
      name.trim();

      if (name.length() > 0) {
        registerCard(uid, name);
      } else {
        Serial.println("Invalid name. Please try again.");
      }
    } else {
      logAttendance(uid);
    }

    mfrc522.PICC_HaltA();  
    delay(1000);
  }
}

void registerCard(String uid, String name) {
  String payload = "{\"name\":\"" + name + "\",\"uid\":\"" + uid + "\"}";

  HTTPClient http;
  http.begin(registerEndpoint);
  http.addHeader("Content-Type", "application/json");

  int httpResponseCode = http.POST(payload);
  String response = http.getString();

  Serial.println("Server Response: " + response);

  if (httpResponseCode == 201) {
    Serial.println("Card Registered Successfully!");
  } else if (httpResponseCode == 409) {
    Serial.println("Registration Failed: Card already registered.");
  } else {
    Serial.println("Registration Error: " + String(httpResponseCode));
  }
  http.end();
}

void logAttendance(String uid) {
  String payload = "{\"uid\":\"" + uid + "\"}";

  HTTPClient http;
  http.begin(scanEndpoint);
  http.addHeader("Content-Type", "application/json");

  int httpResponseCode = http.POST(payload);
  String response = http.getString();

  Serial.println("Server Response: " + response);

  if (httpResponseCode == 200) {
    Serial.println("Attendance Logged Successfully!");
  } else if (httpResponseCode == 404) {
    Serial.println("User not found. Please register the card first.");
  } else {
    Serial.println("Attendance Error: " + String(httpResponseCode));
  }
  http.end();
}

String getUID() {
  String uid = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    uid += String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "") + String(mfrc522.uid.uidByte[i], HEX);
  }
  uid.toUpperCase();
  return uid;
}
